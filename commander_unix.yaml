tests:
  it should fail with invalid argument:
    command: ./commander asfdf
    exit-code: 3

  it should display help:
    command: ./commander
    exit-code: 0

  it should execute tests:
    command: ./commander test ./integration/unix/commander_test.yaml
    stdout: ✓ it should exit with error code
    exit-code: 0

  it should assert that commander will fail:
    command: ./commander test ./integration/unix/failing_suite.yaml
    stdout:
      contains:
        - ✗ 'it will fail', on property 'ExitCode'
        - ✗ 'test timeout' could not be executed with error message
        - Command timed out after 10ms
        - "Count: 2, Failed: 2"
    exit-code: 1

  it should validate a big output:
    command: ./commander test ./integration/unix/test_big_output.yaml
    stdout:
      contains:
        - ✓ cat ./integration/unix/_fixtures/big_out.txt
        - "Count: 1, Failed: 0"
    exit-code: 0

  test global and local configurations:
    command: ./commander test ./integration/unix/config_test.yaml
    config:
      env:
        COMMANDER_FROM_SHELL: from_shell
    stdout:
      contains:
        - ✓ should print global env value
        - ✓ should print local env value
        - ✓ should print env var from shell
    exit-code: 0

  test add command:
    command: ./commander add --no-file --stdout "echo hello"
    stdout: |-
      tests:
        echo hello:
          exit-code: 0
          stdout: hello
    exit-code: 0

  test retries:
    command: ./commander test integration/unix/retries.yaml
    stdout:
      contains:
        - ✗ echo hello, retries 3
        - ✓ it should retry failed commands, retries 2
        - ✗ it should retry failed commands with an interval, retries 2
        - "Duration: 0.1" # Assertion that the interval is working
    exit-code: 1